/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.example.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class DemoAvroTypes extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -2960241127336968998L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DemoAvroTypes\",\"namespace\":\"com.example.avro\",\"fields\":[{\"name\":\"avroBoolean\",\"type\":\"boolean\"},{\"name\":\"avroInt\",\"type\":\"int\"},{\"name\":\"avroLong\",\"type\":\"long\"},{\"name\":\"avroFloat\",\"type\":\"float\"},{\"name\":\"avroDouble\",\"type\":\"double\"},{\"name\":\"avroBytes\",\"type\":\"bytes\"},{\"name\":\"avroString\",\"type\":\"string\"},{\"name\":\"avroArrayOfString\",\"type\":{\"type\":\"array\",\"items\":\"string\"}},{\"name\":\"avroArrayOfInt\",\"type\":{\"type\":\"array\",\"items\":\"int\"}},{\"name\":\"avroMapOfString\",\"type\":{\"type\":\"map\",\"values\":\"string\"}},{\"name\":\"avroMapOfInt\",\"type\":{\"type\":\"map\",\"values\":\"int\"}},{\"name\":\"avroXxx1\",\"type\":{\"type\":\"record\",\"name\":\"DemoAvroTypesXxx\",\"fields\":[{\"name\":\"field1\",\"type\":\"boolean\"},{\"name\":\"field2\",\"type\":\"int\"},{\"name\":\"field3field1\",\"type\":\"long\"}]}},{\"name\":\"avroXxx2\",\"type\":\"DemoAvroTypesXxx\"},{\"name\":\"avroYyy1\",\"type\":{\"type\":\"record\",\"name\":\"DemoAvroTypesYyy\",\"fields\":[{\"name\":\"field1\",\"type\":\"boolean\"},{\"name\":\"field2\",\"type\":\"int\"},{\"name\":\"field3field1\",\"type\":\"long\"}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<DemoAvroTypes> ENCODER =
      new BinaryMessageEncoder<DemoAvroTypes>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<DemoAvroTypes> DECODER =
      new BinaryMessageDecoder<DemoAvroTypes>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<DemoAvroTypes> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<DemoAvroTypes> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<DemoAvroTypes> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<DemoAvroTypes>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this DemoAvroTypes to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a DemoAvroTypes from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a DemoAvroTypes instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static DemoAvroTypes fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private boolean avroBoolean;
   private int avroInt;
   private long avroLong;
   private float avroFloat;
   private double avroDouble;
   private java.nio.ByteBuffer avroBytes;
   private java.lang.CharSequence avroString;
   private java.util.List<java.lang.CharSequence> avroArrayOfString;
   private java.util.List<java.lang.Integer> avroArrayOfInt;
   private java.util.Map<java.lang.CharSequence,java.lang.CharSequence> avroMapOfString;
   private java.util.Map<java.lang.CharSequence,java.lang.Integer> avroMapOfInt;
   private com.example.avro.DemoAvroTypesXxx avroXxx1;
   private com.example.avro.DemoAvroTypesXxx avroXxx2;
   private com.example.avro.DemoAvroTypesYyy avroYyy1;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public DemoAvroTypes() {}

  /**
   * All-args constructor.
   * @param avroBoolean The new value for avroBoolean
   * @param avroInt The new value for avroInt
   * @param avroLong The new value for avroLong
   * @param avroFloat The new value for avroFloat
   * @param avroDouble The new value for avroDouble
   * @param avroBytes The new value for avroBytes
   * @param avroString The new value for avroString
   * @param avroArrayOfString The new value for avroArrayOfString
   * @param avroArrayOfInt The new value for avroArrayOfInt
   * @param avroMapOfString The new value for avroMapOfString
   * @param avroMapOfInt The new value for avroMapOfInt
   * @param avroXxx1 The new value for avroXxx1
   * @param avroXxx2 The new value for avroXxx2
   * @param avroYyy1 The new value for avroYyy1
   */
  public DemoAvroTypes(java.lang.Boolean avroBoolean, java.lang.Integer avroInt, java.lang.Long avroLong, java.lang.Float avroFloat, java.lang.Double avroDouble, java.nio.ByteBuffer avroBytes, java.lang.CharSequence avroString, java.util.List<java.lang.CharSequence> avroArrayOfString, java.util.List<java.lang.Integer> avroArrayOfInt, java.util.Map<java.lang.CharSequence,java.lang.CharSequence> avroMapOfString, java.util.Map<java.lang.CharSequence,java.lang.Integer> avroMapOfInt, com.example.avro.DemoAvroTypesXxx avroXxx1, com.example.avro.DemoAvroTypesXxx avroXxx2, com.example.avro.DemoAvroTypesYyy avroYyy1) {
    this.avroBoolean = avroBoolean;
    this.avroInt = avroInt;
    this.avroLong = avroLong;
    this.avroFloat = avroFloat;
    this.avroDouble = avroDouble;
    this.avroBytes = avroBytes;
    this.avroString = avroString;
    this.avroArrayOfString = avroArrayOfString;
    this.avroArrayOfInt = avroArrayOfInt;
    this.avroMapOfString = avroMapOfString;
    this.avroMapOfInt = avroMapOfInt;
    this.avroXxx1 = avroXxx1;
    this.avroXxx2 = avroXxx2;
    this.avroYyy1 = avroYyy1;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return avroBoolean;
    case 1: return avroInt;
    case 2: return avroLong;
    case 3: return avroFloat;
    case 4: return avroDouble;
    case 5: return avroBytes;
    case 6: return avroString;
    case 7: return avroArrayOfString;
    case 8: return avroArrayOfInt;
    case 9: return avroMapOfString;
    case 10: return avroMapOfInt;
    case 11: return avroXxx1;
    case 12: return avroXxx2;
    case 13: return avroYyy1;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: avroBoolean = (java.lang.Boolean)value$; break;
    case 1: avroInt = (java.lang.Integer)value$; break;
    case 2: avroLong = (java.lang.Long)value$; break;
    case 3: avroFloat = (java.lang.Float)value$; break;
    case 4: avroDouble = (java.lang.Double)value$; break;
    case 5: avroBytes = (java.nio.ByteBuffer)value$; break;
    case 6: avroString = (java.lang.CharSequence)value$; break;
    case 7: avroArrayOfString = (java.util.List<java.lang.CharSequence>)value$; break;
    case 8: avroArrayOfInt = (java.util.List<java.lang.Integer>)value$; break;
    case 9: avroMapOfString = (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>)value$; break;
    case 10: avroMapOfInt = (java.util.Map<java.lang.CharSequence,java.lang.Integer>)value$; break;
    case 11: avroXxx1 = (com.example.avro.DemoAvroTypesXxx)value$; break;
    case 12: avroXxx2 = (com.example.avro.DemoAvroTypesXxx)value$; break;
    case 13: avroYyy1 = (com.example.avro.DemoAvroTypesYyy)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'avroBoolean' field.
   * @return The value of the 'avroBoolean' field.
   */
  public boolean getAvroBoolean() {
    return avroBoolean;
  }


  /**
   * Sets the value of the 'avroBoolean' field.
   * @param value the value to set.
   */
  public void setAvroBoolean(boolean value) {
    this.avroBoolean = value;
  }

  /**
   * Gets the value of the 'avroInt' field.
   * @return The value of the 'avroInt' field.
   */
  public int getAvroInt() {
    return avroInt;
  }


  /**
   * Sets the value of the 'avroInt' field.
   * @param value the value to set.
   */
  public void setAvroInt(int value) {
    this.avroInt = value;
  }

  /**
   * Gets the value of the 'avroLong' field.
   * @return The value of the 'avroLong' field.
   */
  public long getAvroLong() {
    return avroLong;
  }


  /**
   * Sets the value of the 'avroLong' field.
   * @param value the value to set.
   */
  public void setAvroLong(long value) {
    this.avroLong = value;
  }

  /**
   * Gets the value of the 'avroFloat' field.
   * @return The value of the 'avroFloat' field.
   */
  public float getAvroFloat() {
    return avroFloat;
  }


  /**
   * Sets the value of the 'avroFloat' field.
   * @param value the value to set.
   */
  public void setAvroFloat(float value) {
    this.avroFloat = value;
  }

  /**
   * Gets the value of the 'avroDouble' field.
   * @return The value of the 'avroDouble' field.
   */
  public double getAvroDouble() {
    return avroDouble;
  }


  /**
   * Sets the value of the 'avroDouble' field.
   * @param value the value to set.
   */
  public void setAvroDouble(double value) {
    this.avroDouble = value;
  }

  /**
   * Gets the value of the 'avroBytes' field.
   * @return The value of the 'avroBytes' field.
   */
  public java.nio.ByteBuffer getAvroBytes() {
    return avroBytes;
  }


  /**
   * Sets the value of the 'avroBytes' field.
   * @param value the value to set.
   */
  public void setAvroBytes(java.nio.ByteBuffer value) {
    this.avroBytes = value;
  }

  /**
   * Gets the value of the 'avroString' field.
   * @return The value of the 'avroString' field.
   */
  public java.lang.CharSequence getAvroString() {
    return avroString;
  }


  /**
   * Sets the value of the 'avroString' field.
   * @param value the value to set.
   */
  public void setAvroString(java.lang.CharSequence value) {
    this.avroString = value;
  }

  /**
   * Gets the value of the 'avroArrayOfString' field.
   * @return The value of the 'avroArrayOfString' field.
   */
  public java.util.List<java.lang.CharSequence> getAvroArrayOfString() {
    return avroArrayOfString;
  }


  /**
   * Sets the value of the 'avroArrayOfString' field.
   * @param value the value to set.
   */
  public void setAvroArrayOfString(java.util.List<java.lang.CharSequence> value) {
    this.avroArrayOfString = value;
  }

  /**
   * Gets the value of the 'avroArrayOfInt' field.
   * @return The value of the 'avroArrayOfInt' field.
   */
  public java.util.List<java.lang.Integer> getAvroArrayOfInt() {
    return avroArrayOfInt;
  }


  /**
   * Sets the value of the 'avroArrayOfInt' field.
   * @param value the value to set.
   */
  public void setAvroArrayOfInt(java.util.List<java.lang.Integer> value) {
    this.avroArrayOfInt = value;
  }

  /**
   * Gets the value of the 'avroMapOfString' field.
   * @return The value of the 'avroMapOfString' field.
   */
  public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getAvroMapOfString() {
    return avroMapOfString;
  }


  /**
   * Sets the value of the 'avroMapOfString' field.
   * @param value the value to set.
   */
  public void setAvroMapOfString(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
    this.avroMapOfString = value;
  }

  /**
   * Gets the value of the 'avroMapOfInt' field.
   * @return The value of the 'avroMapOfInt' field.
   */
  public java.util.Map<java.lang.CharSequence,java.lang.Integer> getAvroMapOfInt() {
    return avroMapOfInt;
  }


  /**
   * Sets the value of the 'avroMapOfInt' field.
   * @param value the value to set.
   */
  public void setAvroMapOfInt(java.util.Map<java.lang.CharSequence,java.lang.Integer> value) {
    this.avroMapOfInt = value;
  }

  /**
   * Gets the value of the 'avroXxx1' field.
   * @return The value of the 'avroXxx1' field.
   */
  public com.example.avro.DemoAvroTypesXxx getAvroXxx1() {
    return avroXxx1;
  }


  /**
   * Sets the value of the 'avroXxx1' field.
   * @param value the value to set.
   */
  public void setAvroXxx1(com.example.avro.DemoAvroTypesXxx value) {
    this.avroXxx1 = value;
  }

  /**
   * Gets the value of the 'avroXxx2' field.
   * @return The value of the 'avroXxx2' field.
   */
  public com.example.avro.DemoAvroTypesXxx getAvroXxx2() {
    return avroXxx2;
  }


  /**
   * Sets the value of the 'avroXxx2' field.
   * @param value the value to set.
   */
  public void setAvroXxx2(com.example.avro.DemoAvroTypesXxx value) {
    this.avroXxx2 = value;
  }

  /**
   * Gets the value of the 'avroYyy1' field.
   * @return The value of the 'avroYyy1' field.
   */
  public com.example.avro.DemoAvroTypesYyy getAvroYyy1() {
    return avroYyy1;
  }


  /**
   * Sets the value of the 'avroYyy1' field.
   * @param value the value to set.
   */
  public void setAvroYyy1(com.example.avro.DemoAvroTypesYyy value) {
    this.avroYyy1 = value;
  }

  /**
   * Creates a new DemoAvroTypes RecordBuilder.
   * @return A new DemoAvroTypes RecordBuilder
   */
  public static com.example.avro.DemoAvroTypes.Builder newBuilder() {
    return new com.example.avro.DemoAvroTypes.Builder();
  }

  /**
   * Creates a new DemoAvroTypes RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new DemoAvroTypes RecordBuilder
   */
  public static com.example.avro.DemoAvroTypes.Builder newBuilder(com.example.avro.DemoAvroTypes.Builder other) {
    if (other == null) {
      return new com.example.avro.DemoAvroTypes.Builder();
    } else {
      return new com.example.avro.DemoAvroTypes.Builder(other);
    }
  }

  /**
   * Creates a new DemoAvroTypes RecordBuilder by copying an existing DemoAvroTypes instance.
   * @param other The existing instance to copy.
   * @return A new DemoAvroTypes RecordBuilder
   */
  public static com.example.avro.DemoAvroTypes.Builder newBuilder(com.example.avro.DemoAvroTypes other) {
    if (other == null) {
      return new com.example.avro.DemoAvroTypes.Builder();
    } else {
      return new com.example.avro.DemoAvroTypes.Builder(other);
    }
  }

  /**
   * RecordBuilder for DemoAvroTypes instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DemoAvroTypes>
    implements org.apache.avro.data.RecordBuilder<DemoAvroTypes> {

    private boolean avroBoolean;
    private int avroInt;
    private long avroLong;
    private float avroFloat;
    private double avroDouble;
    private java.nio.ByteBuffer avroBytes;
    private java.lang.CharSequence avroString;
    private java.util.List<java.lang.CharSequence> avroArrayOfString;
    private java.util.List<java.lang.Integer> avroArrayOfInt;
    private java.util.Map<java.lang.CharSequence,java.lang.CharSequence> avroMapOfString;
    private java.util.Map<java.lang.CharSequence,java.lang.Integer> avroMapOfInt;
    private com.example.avro.DemoAvroTypesXxx avroXxx1;
    private com.example.avro.DemoAvroTypesXxx.Builder avroXxx1Builder;
    private com.example.avro.DemoAvroTypesXxx avroXxx2;
    private com.example.avro.DemoAvroTypesXxx.Builder avroXxx2Builder;
    private com.example.avro.DemoAvroTypesYyy avroYyy1;
    private com.example.avro.DemoAvroTypesYyy.Builder avroYyy1Builder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.example.avro.DemoAvroTypes.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.avroBoolean)) {
        this.avroBoolean = data().deepCopy(fields()[0].schema(), other.avroBoolean);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.avroInt)) {
        this.avroInt = data().deepCopy(fields()[1].schema(), other.avroInt);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.avroLong)) {
        this.avroLong = data().deepCopy(fields()[2].schema(), other.avroLong);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.avroFloat)) {
        this.avroFloat = data().deepCopy(fields()[3].schema(), other.avroFloat);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.avroDouble)) {
        this.avroDouble = data().deepCopy(fields()[4].schema(), other.avroDouble);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.avroBytes)) {
        this.avroBytes = data().deepCopy(fields()[5].schema(), other.avroBytes);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.avroString)) {
        this.avroString = data().deepCopy(fields()[6].schema(), other.avroString);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.avroArrayOfString)) {
        this.avroArrayOfString = data().deepCopy(fields()[7].schema(), other.avroArrayOfString);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.avroArrayOfInt)) {
        this.avroArrayOfInt = data().deepCopy(fields()[8].schema(), other.avroArrayOfInt);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.avroMapOfString)) {
        this.avroMapOfString = data().deepCopy(fields()[9].schema(), other.avroMapOfString);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.avroMapOfInt)) {
        this.avroMapOfInt = data().deepCopy(fields()[10].schema(), other.avroMapOfInt);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.avroXxx1)) {
        this.avroXxx1 = data().deepCopy(fields()[11].schema(), other.avroXxx1);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (other.hasAvroXxx1Builder()) {
        this.avroXxx1Builder = com.example.avro.DemoAvroTypesXxx.newBuilder(other.getAvroXxx1Builder());
      }
      if (isValidValue(fields()[12], other.avroXxx2)) {
        this.avroXxx2 = data().deepCopy(fields()[12].schema(), other.avroXxx2);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (other.hasAvroXxx2Builder()) {
        this.avroXxx2Builder = com.example.avro.DemoAvroTypesXxx.newBuilder(other.getAvroXxx2Builder());
      }
      if (isValidValue(fields()[13], other.avroYyy1)) {
        this.avroYyy1 = data().deepCopy(fields()[13].schema(), other.avroYyy1);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (other.hasAvroYyy1Builder()) {
        this.avroYyy1Builder = com.example.avro.DemoAvroTypesYyy.newBuilder(other.getAvroYyy1Builder());
      }
    }

    /**
     * Creates a Builder by copying an existing DemoAvroTypes instance
     * @param other The existing instance to copy.
     */
    private Builder(com.example.avro.DemoAvroTypes other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.avroBoolean)) {
        this.avroBoolean = data().deepCopy(fields()[0].schema(), other.avroBoolean);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.avroInt)) {
        this.avroInt = data().deepCopy(fields()[1].schema(), other.avroInt);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.avroLong)) {
        this.avroLong = data().deepCopy(fields()[2].schema(), other.avroLong);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.avroFloat)) {
        this.avroFloat = data().deepCopy(fields()[3].schema(), other.avroFloat);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.avroDouble)) {
        this.avroDouble = data().deepCopy(fields()[4].schema(), other.avroDouble);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.avroBytes)) {
        this.avroBytes = data().deepCopy(fields()[5].schema(), other.avroBytes);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.avroString)) {
        this.avroString = data().deepCopy(fields()[6].schema(), other.avroString);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.avroArrayOfString)) {
        this.avroArrayOfString = data().deepCopy(fields()[7].schema(), other.avroArrayOfString);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.avroArrayOfInt)) {
        this.avroArrayOfInt = data().deepCopy(fields()[8].schema(), other.avroArrayOfInt);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.avroMapOfString)) {
        this.avroMapOfString = data().deepCopy(fields()[9].schema(), other.avroMapOfString);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.avroMapOfInt)) {
        this.avroMapOfInt = data().deepCopy(fields()[10].schema(), other.avroMapOfInt);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.avroXxx1)) {
        this.avroXxx1 = data().deepCopy(fields()[11].schema(), other.avroXxx1);
        fieldSetFlags()[11] = true;
      }
      this.avroXxx1Builder = null;
      if (isValidValue(fields()[12], other.avroXxx2)) {
        this.avroXxx2 = data().deepCopy(fields()[12].schema(), other.avroXxx2);
        fieldSetFlags()[12] = true;
      }
      this.avroXxx2Builder = null;
      if (isValidValue(fields()[13], other.avroYyy1)) {
        this.avroYyy1 = data().deepCopy(fields()[13].schema(), other.avroYyy1);
        fieldSetFlags()[13] = true;
      }
      this.avroYyy1Builder = null;
    }

    /**
      * Gets the value of the 'avroBoolean' field.
      * @return The value.
      */
    public boolean getAvroBoolean() {
      return avroBoolean;
    }


    /**
      * Sets the value of the 'avroBoolean' field.
      * @param value The value of 'avroBoolean'.
      * @return This builder.
      */
    public com.example.avro.DemoAvroTypes.Builder setAvroBoolean(boolean value) {
      validate(fields()[0], value);
      this.avroBoolean = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'avroBoolean' field has been set.
      * @return True if the 'avroBoolean' field has been set, false otherwise.
      */
    public boolean hasAvroBoolean() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'avroBoolean' field.
      * @return This builder.
      */
    public com.example.avro.DemoAvroTypes.Builder clearAvroBoolean() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'avroInt' field.
      * @return The value.
      */
    public int getAvroInt() {
      return avroInt;
    }


    /**
      * Sets the value of the 'avroInt' field.
      * @param value The value of 'avroInt'.
      * @return This builder.
      */
    public com.example.avro.DemoAvroTypes.Builder setAvroInt(int value) {
      validate(fields()[1], value);
      this.avroInt = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'avroInt' field has been set.
      * @return True if the 'avroInt' field has been set, false otherwise.
      */
    public boolean hasAvroInt() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'avroInt' field.
      * @return This builder.
      */
    public com.example.avro.DemoAvroTypes.Builder clearAvroInt() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'avroLong' field.
      * @return The value.
      */
    public long getAvroLong() {
      return avroLong;
    }


    /**
      * Sets the value of the 'avroLong' field.
      * @param value The value of 'avroLong'.
      * @return This builder.
      */
    public com.example.avro.DemoAvroTypes.Builder setAvroLong(long value) {
      validate(fields()[2], value);
      this.avroLong = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'avroLong' field has been set.
      * @return True if the 'avroLong' field has been set, false otherwise.
      */
    public boolean hasAvroLong() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'avroLong' field.
      * @return This builder.
      */
    public com.example.avro.DemoAvroTypes.Builder clearAvroLong() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'avroFloat' field.
      * @return The value.
      */
    public float getAvroFloat() {
      return avroFloat;
    }


    /**
      * Sets the value of the 'avroFloat' field.
      * @param value The value of 'avroFloat'.
      * @return This builder.
      */
    public com.example.avro.DemoAvroTypes.Builder setAvroFloat(float value) {
      validate(fields()[3], value);
      this.avroFloat = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'avroFloat' field has been set.
      * @return True if the 'avroFloat' field has been set, false otherwise.
      */
    public boolean hasAvroFloat() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'avroFloat' field.
      * @return This builder.
      */
    public com.example.avro.DemoAvroTypes.Builder clearAvroFloat() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'avroDouble' field.
      * @return The value.
      */
    public double getAvroDouble() {
      return avroDouble;
    }


    /**
      * Sets the value of the 'avroDouble' field.
      * @param value The value of 'avroDouble'.
      * @return This builder.
      */
    public com.example.avro.DemoAvroTypes.Builder setAvroDouble(double value) {
      validate(fields()[4], value);
      this.avroDouble = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'avroDouble' field has been set.
      * @return True if the 'avroDouble' field has been set, false otherwise.
      */
    public boolean hasAvroDouble() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'avroDouble' field.
      * @return This builder.
      */
    public com.example.avro.DemoAvroTypes.Builder clearAvroDouble() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'avroBytes' field.
      * @return The value.
      */
    public java.nio.ByteBuffer getAvroBytes() {
      return avroBytes;
    }


    /**
      * Sets the value of the 'avroBytes' field.
      * @param value The value of 'avroBytes'.
      * @return This builder.
      */
    public com.example.avro.DemoAvroTypes.Builder setAvroBytes(java.nio.ByteBuffer value) {
      validate(fields()[5], value);
      this.avroBytes = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'avroBytes' field has been set.
      * @return True if the 'avroBytes' field has been set, false otherwise.
      */
    public boolean hasAvroBytes() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'avroBytes' field.
      * @return This builder.
      */
    public com.example.avro.DemoAvroTypes.Builder clearAvroBytes() {
      avroBytes = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'avroString' field.
      * @return The value.
      */
    public java.lang.CharSequence getAvroString() {
      return avroString;
    }


    /**
      * Sets the value of the 'avroString' field.
      * @param value The value of 'avroString'.
      * @return This builder.
      */
    public com.example.avro.DemoAvroTypes.Builder setAvroString(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.avroString = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'avroString' field has been set.
      * @return True if the 'avroString' field has been set, false otherwise.
      */
    public boolean hasAvroString() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'avroString' field.
      * @return This builder.
      */
    public com.example.avro.DemoAvroTypes.Builder clearAvroString() {
      avroString = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'avroArrayOfString' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getAvroArrayOfString() {
      return avroArrayOfString;
    }


    /**
      * Sets the value of the 'avroArrayOfString' field.
      * @param value The value of 'avroArrayOfString'.
      * @return This builder.
      */
    public com.example.avro.DemoAvroTypes.Builder setAvroArrayOfString(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[7], value);
      this.avroArrayOfString = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'avroArrayOfString' field has been set.
      * @return True if the 'avroArrayOfString' field has been set, false otherwise.
      */
    public boolean hasAvroArrayOfString() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'avroArrayOfString' field.
      * @return This builder.
      */
    public com.example.avro.DemoAvroTypes.Builder clearAvroArrayOfString() {
      avroArrayOfString = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'avroArrayOfInt' field.
      * @return The value.
      */
    public java.util.List<java.lang.Integer> getAvroArrayOfInt() {
      return avroArrayOfInt;
    }


    /**
      * Sets the value of the 'avroArrayOfInt' field.
      * @param value The value of 'avroArrayOfInt'.
      * @return This builder.
      */
    public com.example.avro.DemoAvroTypes.Builder setAvroArrayOfInt(java.util.List<java.lang.Integer> value) {
      validate(fields()[8], value);
      this.avroArrayOfInt = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'avroArrayOfInt' field has been set.
      * @return True if the 'avroArrayOfInt' field has been set, false otherwise.
      */
    public boolean hasAvroArrayOfInt() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'avroArrayOfInt' field.
      * @return This builder.
      */
    public com.example.avro.DemoAvroTypes.Builder clearAvroArrayOfInt() {
      avroArrayOfInt = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'avroMapOfString' field.
      * @return The value.
      */
    public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getAvroMapOfString() {
      return avroMapOfString;
    }


    /**
      * Sets the value of the 'avroMapOfString' field.
      * @param value The value of 'avroMapOfString'.
      * @return This builder.
      */
    public com.example.avro.DemoAvroTypes.Builder setAvroMapOfString(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
      validate(fields()[9], value);
      this.avroMapOfString = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'avroMapOfString' field has been set.
      * @return True if the 'avroMapOfString' field has been set, false otherwise.
      */
    public boolean hasAvroMapOfString() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'avroMapOfString' field.
      * @return This builder.
      */
    public com.example.avro.DemoAvroTypes.Builder clearAvroMapOfString() {
      avroMapOfString = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'avroMapOfInt' field.
      * @return The value.
      */
    public java.util.Map<java.lang.CharSequence,java.lang.Integer> getAvroMapOfInt() {
      return avroMapOfInt;
    }


    /**
      * Sets the value of the 'avroMapOfInt' field.
      * @param value The value of 'avroMapOfInt'.
      * @return This builder.
      */
    public com.example.avro.DemoAvroTypes.Builder setAvroMapOfInt(java.util.Map<java.lang.CharSequence,java.lang.Integer> value) {
      validate(fields()[10], value);
      this.avroMapOfInt = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'avroMapOfInt' field has been set.
      * @return True if the 'avroMapOfInt' field has been set, false otherwise.
      */
    public boolean hasAvroMapOfInt() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'avroMapOfInt' field.
      * @return This builder.
      */
    public com.example.avro.DemoAvroTypes.Builder clearAvroMapOfInt() {
      avroMapOfInt = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'avroXxx1' field.
      * @return The value.
      */
    public com.example.avro.DemoAvroTypesXxx getAvroXxx1() {
      return avroXxx1;
    }


    /**
      * Sets the value of the 'avroXxx1' field.
      * @param value The value of 'avroXxx1'.
      * @return This builder.
      */
    public com.example.avro.DemoAvroTypes.Builder setAvroXxx1(com.example.avro.DemoAvroTypesXxx value) {
      validate(fields()[11], value);
      this.avroXxx1Builder = null;
      this.avroXxx1 = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'avroXxx1' field has been set.
      * @return True if the 'avroXxx1' field has been set, false otherwise.
      */
    public boolean hasAvroXxx1() {
      return fieldSetFlags()[11];
    }

    /**
     * Gets the Builder instance for the 'avroXxx1' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.example.avro.DemoAvroTypesXxx.Builder getAvroXxx1Builder() {
      if (avroXxx1Builder == null) {
        if (hasAvroXxx1()) {
          setAvroXxx1Builder(com.example.avro.DemoAvroTypesXxx.newBuilder(avroXxx1));
        } else {
          setAvroXxx1Builder(com.example.avro.DemoAvroTypesXxx.newBuilder());
        }
      }
      return avroXxx1Builder;
    }

    /**
     * Sets the Builder instance for the 'avroXxx1' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.example.avro.DemoAvroTypes.Builder setAvroXxx1Builder(com.example.avro.DemoAvroTypesXxx.Builder value) {
      clearAvroXxx1();
      avroXxx1Builder = value;
      return this;
    }

    /**
     * Checks whether the 'avroXxx1' field has an active Builder instance
     * @return True if the 'avroXxx1' field has an active Builder instance
     */
    public boolean hasAvroXxx1Builder() {
      return avroXxx1Builder != null;
    }

    /**
      * Clears the value of the 'avroXxx1' field.
      * @return This builder.
      */
    public com.example.avro.DemoAvroTypes.Builder clearAvroXxx1() {
      avroXxx1 = null;
      avroXxx1Builder = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'avroXxx2' field.
      * @return The value.
      */
    public com.example.avro.DemoAvroTypesXxx getAvroXxx2() {
      return avroXxx2;
    }


    /**
      * Sets the value of the 'avroXxx2' field.
      * @param value The value of 'avroXxx2'.
      * @return This builder.
      */
    public com.example.avro.DemoAvroTypes.Builder setAvroXxx2(com.example.avro.DemoAvroTypesXxx value) {
      validate(fields()[12], value);
      this.avroXxx2Builder = null;
      this.avroXxx2 = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'avroXxx2' field has been set.
      * @return True if the 'avroXxx2' field has been set, false otherwise.
      */
    public boolean hasAvroXxx2() {
      return fieldSetFlags()[12];
    }

    /**
     * Gets the Builder instance for the 'avroXxx2' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.example.avro.DemoAvroTypesXxx.Builder getAvroXxx2Builder() {
      if (avroXxx2Builder == null) {
        if (hasAvroXxx2()) {
          setAvroXxx2Builder(com.example.avro.DemoAvroTypesXxx.newBuilder(avroXxx2));
        } else {
          setAvroXxx2Builder(com.example.avro.DemoAvroTypesXxx.newBuilder());
        }
      }
      return avroXxx2Builder;
    }

    /**
     * Sets the Builder instance for the 'avroXxx2' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.example.avro.DemoAvroTypes.Builder setAvroXxx2Builder(com.example.avro.DemoAvroTypesXxx.Builder value) {
      clearAvroXxx2();
      avroXxx2Builder = value;
      return this;
    }

    /**
     * Checks whether the 'avroXxx2' field has an active Builder instance
     * @return True if the 'avroXxx2' field has an active Builder instance
     */
    public boolean hasAvroXxx2Builder() {
      return avroXxx2Builder != null;
    }

    /**
      * Clears the value of the 'avroXxx2' field.
      * @return This builder.
      */
    public com.example.avro.DemoAvroTypes.Builder clearAvroXxx2() {
      avroXxx2 = null;
      avroXxx2Builder = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'avroYyy1' field.
      * @return The value.
      */
    public com.example.avro.DemoAvroTypesYyy getAvroYyy1() {
      return avroYyy1;
    }


    /**
      * Sets the value of the 'avroYyy1' field.
      * @param value The value of 'avroYyy1'.
      * @return This builder.
      */
    public com.example.avro.DemoAvroTypes.Builder setAvroYyy1(com.example.avro.DemoAvroTypesYyy value) {
      validate(fields()[13], value);
      this.avroYyy1Builder = null;
      this.avroYyy1 = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'avroYyy1' field has been set.
      * @return True if the 'avroYyy1' field has been set, false otherwise.
      */
    public boolean hasAvroYyy1() {
      return fieldSetFlags()[13];
    }

    /**
     * Gets the Builder instance for the 'avroYyy1' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.example.avro.DemoAvroTypesYyy.Builder getAvroYyy1Builder() {
      if (avroYyy1Builder == null) {
        if (hasAvroYyy1()) {
          setAvroYyy1Builder(com.example.avro.DemoAvroTypesYyy.newBuilder(avroYyy1));
        } else {
          setAvroYyy1Builder(com.example.avro.DemoAvroTypesYyy.newBuilder());
        }
      }
      return avroYyy1Builder;
    }

    /**
     * Sets the Builder instance for the 'avroYyy1' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.example.avro.DemoAvroTypes.Builder setAvroYyy1Builder(com.example.avro.DemoAvroTypesYyy.Builder value) {
      clearAvroYyy1();
      avroYyy1Builder = value;
      return this;
    }

    /**
     * Checks whether the 'avroYyy1' field has an active Builder instance
     * @return True if the 'avroYyy1' field has an active Builder instance
     */
    public boolean hasAvroYyy1Builder() {
      return avroYyy1Builder != null;
    }

    /**
      * Clears the value of the 'avroYyy1' field.
      * @return This builder.
      */
    public com.example.avro.DemoAvroTypes.Builder clearAvroYyy1() {
      avroYyy1 = null;
      avroYyy1Builder = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public DemoAvroTypes build() {
      try {
        DemoAvroTypes record = new DemoAvroTypes();
        record.avroBoolean = fieldSetFlags()[0] ? this.avroBoolean : (java.lang.Boolean) defaultValue(fields()[0]);
        record.avroInt = fieldSetFlags()[1] ? this.avroInt : (java.lang.Integer) defaultValue(fields()[1]);
        record.avroLong = fieldSetFlags()[2] ? this.avroLong : (java.lang.Long) defaultValue(fields()[2]);
        record.avroFloat = fieldSetFlags()[3] ? this.avroFloat : (java.lang.Float) defaultValue(fields()[3]);
        record.avroDouble = fieldSetFlags()[4] ? this.avroDouble : (java.lang.Double) defaultValue(fields()[4]);
        record.avroBytes = fieldSetFlags()[5] ? this.avroBytes : (java.nio.ByteBuffer) defaultValue(fields()[5]);
        record.avroString = fieldSetFlags()[6] ? this.avroString : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.avroArrayOfString = fieldSetFlags()[7] ? this.avroArrayOfString : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[7]);
        record.avroArrayOfInt = fieldSetFlags()[8] ? this.avroArrayOfInt : (java.util.List<java.lang.Integer>) defaultValue(fields()[8]);
        record.avroMapOfString = fieldSetFlags()[9] ? this.avroMapOfString : (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>) defaultValue(fields()[9]);
        record.avroMapOfInt = fieldSetFlags()[10] ? this.avroMapOfInt : (java.util.Map<java.lang.CharSequence,java.lang.Integer>) defaultValue(fields()[10]);
        if (avroXxx1Builder != null) {
          try {
            record.avroXxx1 = this.avroXxx1Builder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("avroXxx1"));
            throw e;
          }
        } else {
          record.avroXxx1 = fieldSetFlags()[11] ? this.avroXxx1 : (com.example.avro.DemoAvroTypesXxx) defaultValue(fields()[11]);
        }
        if (avroXxx2Builder != null) {
          try {
            record.avroXxx2 = this.avroXxx2Builder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("avroXxx2"));
            throw e;
          }
        } else {
          record.avroXxx2 = fieldSetFlags()[12] ? this.avroXxx2 : (com.example.avro.DemoAvroTypesXxx) defaultValue(fields()[12]);
        }
        if (avroYyy1Builder != null) {
          try {
            record.avroYyy1 = this.avroYyy1Builder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("avroYyy1"));
            throw e;
          }
        } else {
          record.avroYyy1 = fieldSetFlags()[13] ? this.avroYyy1 : (com.example.avro.DemoAvroTypesYyy) defaultValue(fields()[13]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<DemoAvroTypes>
    WRITER$ = (org.apache.avro.io.DatumWriter<DemoAvroTypes>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<DemoAvroTypes>
    READER$ = (org.apache.avro.io.DatumReader<DemoAvroTypes>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeBoolean(this.avroBoolean);

    out.writeInt(this.avroInt);

    out.writeLong(this.avroLong);

    out.writeFloat(this.avroFloat);

    out.writeDouble(this.avroDouble);

    out.writeBytes(this.avroBytes);

    out.writeString(this.avroString);

    long size0 = this.avroArrayOfString.size();
    out.writeArrayStart();
    out.setItemCount(size0);
    long actualSize0 = 0;
    for (java.lang.CharSequence e0: this.avroArrayOfString) {
      actualSize0++;
      out.startItem();
      out.writeString(e0);
    }
    out.writeArrayEnd();
    if (actualSize0 != size0)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");

    long size1 = this.avroArrayOfInt.size();
    out.writeArrayStart();
    out.setItemCount(size1);
    long actualSize1 = 0;
    for (java.lang.Integer e1: this.avroArrayOfInt) {
      actualSize1++;
      out.startItem();
      out.writeInt(e1);
    }
    out.writeArrayEnd();
    if (actualSize1 != size1)
      throw new java.util.ConcurrentModificationException("Array-size written was " + size1 + ", but element count was " + actualSize1 + ".");

    long size2 = this.avroMapOfString.size();
    out.writeMapStart();
    out.setItemCount(size2);
    long actualSize2 = 0;
    for (java.util.Map.Entry<java.lang.CharSequence, java.lang.CharSequence> e2: this.avroMapOfString.entrySet()) {
      actualSize2++;
      out.startItem();
      out.writeString(e2.getKey());
      java.lang.CharSequence v2 = e2.getValue();
      out.writeString(v2);
    }
    out.writeMapEnd();
    if (actualSize2 != size2)
      throw new java.util.ConcurrentModificationException("Map-size written was " + size2 + ", but element count was " + actualSize2 + ".");

    long size3 = this.avroMapOfInt.size();
    out.writeMapStart();
    out.setItemCount(size3);
    long actualSize3 = 0;
    for (java.util.Map.Entry<java.lang.CharSequence, java.lang.Integer> e3: this.avroMapOfInt.entrySet()) {
      actualSize3++;
      out.startItem();
      out.writeString(e3.getKey());
      java.lang.Integer v3 = e3.getValue();
      out.writeInt(v3);
    }
    out.writeMapEnd();
    if (actualSize3 != size3)
      throw new java.util.ConcurrentModificationException("Map-size written was " + size3 + ", but element count was " + actualSize3 + ".");

    this.avroXxx1.customEncode(out);

    this.avroXxx2.customEncode(out);

    this.avroYyy1.customEncode(out);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.avroBoolean = in.readBoolean();

      this.avroInt = in.readInt();

      this.avroLong = in.readLong();

      this.avroFloat = in.readFloat();

      this.avroDouble = in.readDouble();

      this.avroBytes = in.readBytes(this.avroBytes);

      this.avroString = in.readString(this.avroString instanceof Utf8 ? (Utf8)this.avroString : null);

      long size0 = in.readArrayStart();
      java.util.List<java.lang.CharSequence> a0 = this.avroArrayOfString;
      if (a0 == null) {
        a0 = new SpecificData.Array<java.lang.CharSequence>((int)size0, SCHEMA$.getField("avroArrayOfString").schema());
        this.avroArrayOfString = a0;
      } else a0.clear();
      SpecificData.Array<java.lang.CharSequence> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a0 : null);
      for ( ; 0 < size0; size0 = in.arrayNext()) {
        for ( ; size0 != 0; size0--) {
          java.lang.CharSequence e0 = (ga0 != null ? ga0.peek() : null);
          e0 = in.readString(e0 instanceof Utf8 ? (Utf8)e0 : null);
          a0.add(e0);
        }
      }

      long size1 = in.readArrayStart();
      java.util.List<java.lang.Integer> a1 = this.avroArrayOfInt;
      if (a1 == null) {
        a1 = new SpecificData.Array<java.lang.Integer>((int)size1, SCHEMA$.getField("avroArrayOfInt").schema());
        this.avroArrayOfInt = a1;
      } else a1.clear();
      SpecificData.Array<java.lang.Integer> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Integer>)a1 : null);
      for ( ; 0 < size1; size1 = in.arrayNext()) {
        for ( ; size1 != 0; size1--) {
          java.lang.Integer e1 = (ga1 != null ? ga1.peek() : null);
          e1 = in.readInt();
          a1.add(e1);
        }
      }

      long size2 = in.readMapStart();
      java.util.Map<java.lang.CharSequence,java.lang.CharSequence> m2 = this.avroMapOfString; // Need fresh name due to limitation of macro system
      if (m2 == null) {
        m2 = new java.util.HashMap<java.lang.CharSequence,java.lang.CharSequence>((int)size2);
        this.avroMapOfString = m2;
      } else m2.clear();
      for ( ; 0 < size2; size2 = in.mapNext()) {
        for ( ; size2 != 0; size2--) {
          java.lang.CharSequence k2 = null;
          k2 = in.readString(k2 instanceof Utf8 ? (Utf8)k2 : null);
          java.lang.CharSequence v2 = null;
          v2 = in.readString(v2 instanceof Utf8 ? (Utf8)v2 : null);
          m2.put(k2, v2);
        }
      }

      long size3 = in.readMapStart();
      java.util.Map<java.lang.CharSequence,java.lang.Integer> m3 = this.avroMapOfInt; // Need fresh name due to limitation of macro system
      if (m3 == null) {
        m3 = new java.util.HashMap<java.lang.CharSequence,java.lang.Integer>((int)size3);
        this.avroMapOfInt = m3;
      } else m3.clear();
      for ( ; 0 < size3; size3 = in.mapNext()) {
        for ( ; size3 != 0; size3--) {
          java.lang.CharSequence k3 = null;
          k3 = in.readString(k3 instanceof Utf8 ? (Utf8)k3 : null);
          java.lang.Integer v3 = null;
          v3 = in.readInt();
          m3.put(k3, v3);
        }
      }

      if (this.avroXxx1 == null) {
        this.avroXxx1 = new com.example.avro.DemoAvroTypesXxx();
      }
      this.avroXxx1.customDecode(in);

      if (this.avroXxx2 == null) {
        this.avroXxx2 = new com.example.avro.DemoAvroTypesXxx();
      }
      this.avroXxx2.customDecode(in);

      if (this.avroYyy1 == null) {
        this.avroYyy1 = new com.example.avro.DemoAvroTypesYyy();
      }
      this.avroYyy1.customDecode(in);

    } else {
      for (int i = 0; i < 14; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.avroBoolean = in.readBoolean();
          break;

        case 1:
          this.avroInt = in.readInt();
          break;

        case 2:
          this.avroLong = in.readLong();
          break;

        case 3:
          this.avroFloat = in.readFloat();
          break;

        case 4:
          this.avroDouble = in.readDouble();
          break;

        case 5:
          this.avroBytes = in.readBytes(this.avroBytes);
          break;

        case 6:
          this.avroString = in.readString(this.avroString instanceof Utf8 ? (Utf8)this.avroString : null);
          break;

        case 7:
          long size0 = in.readArrayStart();
          java.util.List<java.lang.CharSequence> a0 = this.avroArrayOfString;
          if (a0 == null) {
            a0 = new SpecificData.Array<java.lang.CharSequence>((int)size0, SCHEMA$.getField("avroArrayOfString").schema());
            this.avroArrayOfString = a0;
          } else a0.clear();
          SpecificData.Array<java.lang.CharSequence> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.CharSequence>)a0 : null);
          for ( ; 0 < size0; size0 = in.arrayNext()) {
            for ( ; size0 != 0; size0--) {
              java.lang.CharSequence e0 = (ga0 != null ? ga0.peek() : null);
              e0 = in.readString(e0 instanceof Utf8 ? (Utf8)e0 : null);
              a0.add(e0);
            }
          }
          break;

        case 8:
          long size1 = in.readArrayStart();
          java.util.List<java.lang.Integer> a1 = this.avroArrayOfInt;
          if (a1 == null) {
            a1 = new SpecificData.Array<java.lang.Integer>((int)size1, SCHEMA$.getField("avroArrayOfInt").schema());
            this.avroArrayOfInt = a1;
          } else a1.clear();
          SpecificData.Array<java.lang.Integer> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<java.lang.Integer>)a1 : null);
          for ( ; 0 < size1; size1 = in.arrayNext()) {
            for ( ; size1 != 0; size1--) {
              java.lang.Integer e1 = (ga1 != null ? ga1.peek() : null);
              e1 = in.readInt();
              a1.add(e1);
            }
          }
          break;

        case 9:
          long size2 = in.readMapStart();
          java.util.Map<java.lang.CharSequence,java.lang.CharSequence> m2 = this.avroMapOfString; // Need fresh name due to limitation of macro system
          if (m2 == null) {
            m2 = new java.util.HashMap<java.lang.CharSequence,java.lang.CharSequence>((int)size2);
            this.avroMapOfString = m2;
          } else m2.clear();
          for ( ; 0 < size2; size2 = in.mapNext()) {
            for ( ; size2 != 0; size2--) {
              java.lang.CharSequence k2 = null;
              k2 = in.readString(k2 instanceof Utf8 ? (Utf8)k2 : null);
              java.lang.CharSequence v2 = null;
              v2 = in.readString(v2 instanceof Utf8 ? (Utf8)v2 : null);
              m2.put(k2, v2);
            }
          }
          break;

        case 10:
          long size3 = in.readMapStart();
          java.util.Map<java.lang.CharSequence,java.lang.Integer> m3 = this.avroMapOfInt; // Need fresh name due to limitation of macro system
          if (m3 == null) {
            m3 = new java.util.HashMap<java.lang.CharSequence,java.lang.Integer>((int)size3);
            this.avroMapOfInt = m3;
          } else m3.clear();
          for ( ; 0 < size3; size3 = in.mapNext()) {
            for ( ; size3 != 0; size3--) {
              java.lang.CharSequence k3 = null;
              k3 = in.readString(k3 instanceof Utf8 ? (Utf8)k3 : null);
              java.lang.Integer v3 = null;
              v3 = in.readInt();
              m3.put(k3, v3);
            }
          }
          break;

        case 11:
          if (this.avroXxx1 == null) {
            this.avroXxx1 = new com.example.avro.DemoAvroTypesXxx();
          }
          this.avroXxx1.customDecode(in);
          break;

        case 12:
          if (this.avroXxx2 == null) {
            this.avroXxx2 = new com.example.avro.DemoAvroTypesXxx();
          }
          this.avroXxx2.customDecode(in);
          break;

        case 13:
          if (this.avroYyy1 == null) {
            this.avroYyy1 = new com.example.avro.DemoAvroTypesYyy();
          }
          this.avroYyy1.customDecode(in);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










